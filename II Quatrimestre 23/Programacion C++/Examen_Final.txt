Ejercicio #1

/*Realiza una función que tome como parámetros un vector de números enteros y su
tamaño e imprima un vector con los elementos impares del vector recibido.*/


#include<iostream>
#include<stdlib.h>
using namespace std;

void pedirDatos();
void impares(int vec[], int tam);
void mostrarVector(int vec[], int tam);
int vector[100], impar[100], tam;

int main() {

	pedirDatos();
	impares(vector, tam);
	mostrarVector(vector, tam);

	system("pause");
	return 0;
}



void pedirDatos() {
	cout << "Digite el numero de elementos: ";
	cin >> tam;
	cout << "\n";

	for (int i = 0; i < tam; i++) {
		cout << i + 1 << " Digite un numero: ";
		cin >> vector[i];
	}
}

void impares(int vec[], int tam) {
	//sacamos los numero impares
	for (int i = 0; i < tam; i++) {
		if (vector[i] % 2 != 0) {
			impar[i] = vector[i];
		}
	}
}


void mostrarVector(int vec[], int tam) {

	cout << "\n";
	cout << "Los numero impares son:\n";
	for (int i = 0; i < tam; i++) {
		if (impar[i] != 0) {              //este if lo que hace es no imprimir los ceros
			cout << impar[i] << "\n"; 
		}
	}
}


Ejercicio #2
/*Defina una estructura que indique el tiempo empleado por un ciclista en 
una etapa. La estructura debe tener tres campos: horas, minutos y segundos. 
Escriba un programa que dado n etapas calcule el tiempo total empleado en 
correr todas las etapas*/



#include<iostream>
#include<stdlib.h>
using namespace std;

struct ciclista {
	int horas;
	int minutos;
	int segundos;
}etapas[10];

int main() {
	int horasT=0, minutosT=0, segT=0, n;


	cout << "Digite las cantidad de etapas realizadas por el ciclista: ";
	cin >> n;
	for (int i = 0; i < n; i++) {
		while (getchar() != '\n');
		cout << "Digite las horas de la etapa " << i + 1 << ":";
		cin >> etapas[i].horas;
		horasT+= etapas[i].horas;
		cout << "Digite los minutos de la etapa " << i + 1 << ":";
		cin >> etapas[i].minutos;
		minutosT+= etapas[i].minutos;
		cout << "Digite los segundos de la etapa " << i + 1 << ":";
		cin >> etapas[i].segundos;
		segT+= etapas[i].segundos;

		if (minutosT >= 60) {
			minutosT -= 60;
			horasT++;
		}
		if (segT >= 60) {
			segT -= 60;
			minutosT++;
		}
		cout << "\n";
	}
	cout << "\n";

	

	cout << "El tiempo total empleado en correr todas las etapas es de: " << horasT << ":" << minutosT << ":" << segT << endl;
	


	system("pause");
	return 0;
}



Ejercicio #3

/*Hacer 2 estructuras una llamada Salario que tendrá los siguientes campos:bruto, extras, deducciones;
y otra llamada Empleado que tendrá los siguientes miembros: nombre, sexo, edad; hacer que la estructura salario este anidada en la estructura Empleado,
luego pedir todos los datos para un Empleado, luego calcular su salario neto, y por último imprimir todos sus datos incluidos el salario neto.*/


#include<iostream>
#include<stdlib.h>
using namespace std;

struct salario {
	int bruto;
	int extras;
	int deducciones;
	int neto;
};
struct Empleado {
	char nombre[20];
	char sexo[20];
	int edad;
	struct salario info_salario;
}empleado[1];


int main() {
	for (int i = 0; i < 1; i++) {
		cout << "Digite el nombre del empleado: ";
		cin.getline(empleado[i].nombre, 20, '\n');
		cout << "Digite el sexo del empleado: ";
		cin.getline(empleado[i].sexo, 20, '\n');
		cout << "Digite la edad del empleado: ";
		cin >> empleado[i].edad;
		cout << "Digite el monto del salario bruto: ";
		cin >> empleado[i].info_salario.bruto;
		cout << "Digite el monto del las horas extras: ";
		cin >> empleado[i].info_salario.extras;
		cout << "Digite el monto de las deducciones: ";
		cin >> empleado[i].info_salario.deducciones;

		//sacar el salario neto
		empleado[i].info_salario.neto = empleado[i].info_salario.bruto - empleado[i].info_salario.deducciones + empleado[i].info_salario.extras;

	}
	cout << '\n';
	//mostrando los datos

	for (int i = 0; i < 1; i++) {
		cout << "Nombre: " << empleado[i].nombre << endl;
		cout << "Sexo: " << empleado[i].sexo << endl;
		cout << "Edad: " << empleado[i].edad<< endl;
		cout << "Salario Bruto: " << empleado[i].info_salario.bruto << endl;
		cout << "Monto de las horas extras: " << empleado[i].info_salario.extras << endl;
		cout << "Monto de las deducciones: " << empleado[i].info_salario.deducciones << endl;
		cout << "Salario Neto: " << empleado[i].info_salario.neto<<endl;
	}

	system("pause");
	return 0;
}